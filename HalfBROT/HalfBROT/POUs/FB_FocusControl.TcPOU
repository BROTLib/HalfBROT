<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4026.8">
  <POU Name="FB_FocusControl" Id="{27922653-650e-4327-85ba-374d2f945b2c}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_FocusControl
VAR_INPUT
	enable				: BOOL;		// enable the axis
	inward				: BOOL;		// Move M2 closer to M1
	outward				: BOOL;		// Move M2 away from M1	
	reset				: BOOL;		// reset the axis(-error)
	moveAxis			: BOOL;		// move the axis to new position
	homeAxis			: BOOL;		// calibrate the focus axis
	position			: LREAL;	// focus position in millimeters
	minPosition			: LREAL := 0;	// minimum position
	maxPosition			: LREAL := 100;	// maximum position
	telescopeMode		: E_TelescopeMode;
	homingPosition		: LREAL := 92.02; // 104.02 - 12.00 	// reference position for homing
	tolerance			: LREAL := 0.005;
END_VAR
VAR_OUTPUT
	calibrated			: BOOL;		// true if absolute calibration
	error				: BOOL;		// true if error
	errorID				: UDINT;	// ID of NC axis error
	ready				: BOOL;		// ready signal = drive ready + standstill
	focusUnlock	  AT%Q* : BOOL;		// whether focus is unlocked
END_VAR
VAR_IN_OUT
	comm				: FB_Comm_MQTT;
END_VAR
VAR
	focusDelay			: TON;
	brakeDelay			: TON;
	focusAxis			: FB_Axis2;
	actualPosition		: LREAL;
	manualUnlock		: BOOL;		// manual override to unlock the focus
	focusUnlocked		: BOOL;
	mqttTimer 			: TON := (PT:=T#5S);
	//getlastposition:	BOOL := TRUE;
	focusAxisEvent		: FB_EventLog;
	calibrationEvent	: FB_EventLog;
	homingMode			: MC_HOMINGMODE := 		MC_DefaultHoming;
	setPosition			: MC_setPosition;
	
	limitNear	   AT%I*: BOOL;	// DIN29 3.4
	limitFar  	   AT%I*: BOOL;	// DIN30 3.5
	axisRef				: AXIS_REF;
END_VAR
VAR PERSISTENT
	lastPosition		: LREAL := -1.0;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[(*
Focus Control Unit
spindle gear: 5mm
brake: 86 61103H00 Var. 0005 Index C; 24VDC geglattet 0,25 A P1672/R7
motor: Faulhaber ; Schönaich ; 3557K024CR; 454  431 ; Made in germany ==> 5300 rpm
gear: Faulhaber ; MINIMOTOR SA ; swiss made ; 38/1S  43:1 ; 033896  503
Focus is locked by default
70,8W; 0,100A no load current; 2,0 Terminal resistance; 1,950A max Current 
*)

// limit to sane positions
position := LIMIT(minPosition, position, maxPosition);

// focus is unlocked if enabled or manually unlocked
focusUnlock := manualUnlock OR enable;

// wait until the focus is unlocked for n milliseconds
focusDelay(IN := focusUnlock, PT := T#500MS, Q => focusUnlocked);
// wait for brake until we are at rest
brakeDelay(IN := NOT focusAxis.Busy AND focusAxis.StandStill, PT := T#4000MS);

// if we are on automatic mode then position the focus
IF telescopeMode = E_TelescopeMode.automatic AND NOT manualUnlock THEN
	IF focusAxis.calibrated THEN
		IF ABS(position - actualPosition) > tolerance THEN
			IF focusAxis.Ready THEN
				moveAxis := TRUE;
			ELSE
				enable := TRUE;
			END_IF
		END_IF
		// disable the drive and lock the brake, if we stand for more than n seconds
		IF brakeDelay.Q THEN
			enable := FALSE;
		END_IF
		// store actual position, if we are calibrated and locked
		IF NOT focusUnlock THEN
			lastPosition := actualPosition;
		END_IF
	ELSE // not calibrated
		IF focusAxis.Ready THEN
			homeAxis := TRUE;
		END_IF
	END_IF
END_IF

IF homeAxis THEN
	IF lastPosition > 0.0 THEN
		homingMode := MC_ForceCalibration; // MC_Direct
		position := lastPosition;
		setPosition.Execute := TRUE;
	ELSE
		homingMode := MC_DefaultHoming;
		position := homingPosition;
		setPosition.Execute := FALSE;
	END_IF
ELSE
	setPosition.Execute := FALSE;	
END_IF

// deactivate limit switches on homing
MC_SetAcceptBlockedDriveSignal(Axis := axisRef, enable := homeAxis);
setPosition(Axis := axisRef, Position := lastPosition);
		
focusAxis(	
	enable 			:= focusUnlocked,
	Reset 			:= reset,
	moveAxis 		:= moveAxis AND focusUnlocked,
	homeAxis 		:= homeAxis AND focusUnlocked,
	homingMode 		:= homingMode,
	Position 		:= position,
	Velocity 		:= 0.04,
	enable_Positive := NOT limitFar OR homeAxis,
	enable_Negative := NOT limitNear,
	Jog_Forward 	:= outward AND focusUnlocked,
	Jog_Backwards 	:= inward AND focusUnlocked,
	bCalibrationCam := limitFar,
	ActualPosition 	=> actualPosition,
	Error 			=> error,
	ErrorID 		=> errorID,
	AxisRef 		:= axisRef);	

IF focusAxis.MoveDone THEN
	moveAxis := FALSE;
END_IF

IF focusAxis.HomeDone THEN
	homeAxis := FALSE;
	enable := FALSE;
	lastPosition := position;
END_IF
	
IF focusAxis.ResetDone THEN
	reset := FALSE;
END_IF

IF focusAxis.calibrated OR Error THEN
	homeAxis := FALSE;
END_IF

IF Error THEN
	lastPosition := -1.0;
	//focusAxis.calibrated := FALSE;
	calibrated := FALSE;
END_IF

calibrated := focusAxis.calibrated;

Ready := focusAxis.Ready AND focusAxis.StandStill OR NOT focusUnlock;

mqttTimer(IN:=TRUE);
IF mqttTimer.Q THEN // publish new payload every second
	mqttTimer(IN:=FALSE);
	comm.Publish('telescope', 'dome', 'FocusPosition', LREAL_TO_FMTSTR(actualPosition, 5, TRUE));
	comm.Publish('telescope', 'dome', 'Focuscalibrated', BOOL_TO_STRING(calibrated));	
	comm.Publish('telescope', 'dome', 'FocusReady', BOOL_TO_STRING(ready));	
END_IF

focusAxisEvent(	
	Trigger 		:= focusAxis.Error, 
	Level 			:= ADSLOG_MSGTYPE_ERROR,
	FormatString	:= 'Focus Axis Error: %S',
	OnMessage 		:= NCError_TO_STRING(ErrorID),
	OffMEssage 		:= 'OK',
	OffLevel 		:= ADSLOG_MSGTYPE_HINT,
	comm 			:= comm);

CalibrationEvent(
	Trigger 		:=	calibrated,
	Level 			:=	ADSLOG_MSGTYPE_HINT,
	OnMessage 		:= 'Focus is calibrated.',
	comm 			:= comm);]]></ST>
    </Implementation>
    <LineIds Name="FB_FocusControl">
      <LineId Id="1317" Count="130" />
      <LineId Id="136" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>